// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "API Title",
    "version": "1.0"
  },
  "host": "127.0.0.1:8000",
  "basePath": "/api",
  "paths": {
    "/common/user": {
      "get": {
        "description": "get users",
        "tags": [
          "common/user"
        ],
        "summary": "get users",
        "operationId": "getUser",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "number of pages to filter by",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "maximum number of results to return",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/common.user"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResult"
            }
          }
        }
      },
      "put": {
        "description": "put users",
        "tags": [
          "common/user"
        ],
        "summary": "put users",
        "operationId": "putUser",
        "parameters": [
          {
            "description": "put request",
            "name": "task",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "users": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/common.user"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/common.user"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResult"
            }
          }
        }
      },
      "post": {
        "description": "post users",
        "tags": [
          "common/user"
        ],
        "summary": "post users",
        "operationId": "postUser",
        "parameters": [
          {
            "description": "New users to add",
            "name": "users",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/common.user"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/common.user"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResult"
            }
          }
        }
      },
      "delete": {
        "description": "delete users",
        "tags": [
          "common/user"
        ],
        "summary": "delete users",
        "operationId": "deleteUser",
        "parameters": [
          {
            "description": "Id of users to delete",
            "name": "ids",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/common.user"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResult"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ErrorResult": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "common.address": {
      "type": "object",
      "properties": {
        "address_line": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "postcode": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "street": {
          "type": "string"
        }
      }
    },
    "common.user": {
      "type": "object",
      "properties": {
        "date_joined": {
          "type": "string",
          "format": "date"
        },
        "email": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "has_marketing_access": {
          "type": "boolean"
        },
        "has_sales_access": {
          "type": "boolean"
        },
        "is_active": {
          "type": "boolean"
        },
        "is_admin": {
          "type": "boolean"
        },
        "is_staff": {
          "type": "boolean"
        },
        "last_name": {
          "type": "string"
        },
        "profile_pic": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "API Title",
    "version": "1.0"
  },
  "host": "127.0.0.1:8000",
  "basePath": "/api",
  "paths": {
    "/common/user": {
      "get": {
        "description": "get users",
        "tags": [
          "common/user"
        ],
        "summary": "get users",
        "operationId": "getUser",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "number of pages to filter by",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "maximum number of results to return",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/common.user"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResult"
            }
          }
        }
      },
      "put": {
        "description": "put users",
        "tags": [
          "common/user"
        ],
        "summary": "put users",
        "operationId": "putUser",
        "parameters": [
          {
            "description": "put request",
            "name": "task",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "users": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/common.user"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/common.user"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResult"
            }
          }
        }
      },
      "post": {
        "description": "post users",
        "tags": [
          "common/user"
        ],
        "summary": "post users",
        "operationId": "postUser",
        "parameters": [
          {
            "description": "New users to add",
            "name": "users",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/common.user"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/common.user"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResult"
            }
          }
        }
      },
      "delete": {
        "description": "delete users",
        "tags": [
          "common/user"
        ],
        "summary": "delete users",
        "operationId": "deleteUser",
        "parameters": [
          {
            "description": "Id of users to delete",
            "name": "ids",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/common.user"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResult"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ErrorResult": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "common.address": {
      "type": "object",
      "properties": {
        "address_line": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "postcode": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "street": {
          "type": "string"
        }
      }
    },
    "common.user": {
      "type": "object",
      "properties": {
        "date_joined": {
          "type": "string",
          "format": "date"
        },
        "email": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "has_marketing_access": {
          "type": "boolean"
        },
        "has_sales_access": {
          "type": "boolean"
        },
        "is_active": {
          "type": "boolean"
        },
        "is_admin": {
          "type": "boolean"
        },
        "is_staff": {
          "type": "boolean"
        },
        "last_name": {
          "type": "string"
        },
        "profile_pic": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    }
  }
}`))
}
